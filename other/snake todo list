Snake todo list:

build: gcc snake.c -o snake
run: ./snake

---------------------------------------------------------------

Main tasks:
1. Make head moving in 1 direction [DONE]
2. Read keyboard event for setting direction (u,d,l,r) [DONE]
3. Add snakes body [DONE]
-------------------------------------
4. Add food [DONE]
5. Generate food randomly [DONE]
6. Increment body on eating food [DONE]
7. Screen refresh algorithm change: instead of completely refreshing the whole screen, only update line by line where necessary [DONE]
8. Refactor: Split screen generating in 1 function for updating data, and 1 for rendering [DONE]
------------------------------------
9. Refactor: food detection [DONE], dont create food on body [TODO]
10. Body collision detection [DONE]
11. REALOCATE MEMORY IF WINDOW SIZE IS CHANGED [TODO]
12. Initialize git repository [DONE]
-----------------------------------------------

Minor:
1. Update header info
2. Add some styling and colors

Bugfix:
1. Remove flashing :/ [DONE]
2. Why there's 2 heads? [DONE]
3. Snake should not go on the walls [TODO]
4. Body updating [DONE]
    It was caused by wrong memory allocation
5. BUG: missing last cycle new line print + [DONE]
7. Header line redraw [DONE]

Edge cases:
1. Sta ako su glava i food izvan ili preko linije ili na liniji 
2. Ili sta ako zmijica popuni ceo ekran?

Other:
1. Odbiti se od ivice ili dijagonalno?
2. Add different skins and options, cheats
3. Instead of reassigning all body elements, is it possible to update only first and last?
4. Pause [DONE]
------------------------------------------------------

From code:


1. Take millis from command line or menu

2. REALOCATE MEMORY IF WINDOW SIZE IS CHANGED

3. If window size changed -> then clear the screen
   system("clear");

4. resizeBodyIfNeeded

/**
 * TODO:
 * 5. If columns(width) < certain size, then dont print the header line.
 * 6. If rows <5 OR columns < 155 -> exit with message
 * 7. update commit instructions: gcc src/snake.c -o bin/snake 
   8. Edge case: test with small screen and god-mode when you fill up the whole screen
 */


